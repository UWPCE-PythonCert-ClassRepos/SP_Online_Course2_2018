"""
    Schema design for mailroom Peewee ORM

"""

from peewee import *

database = SqliteDatabase('mailroom.db')
database.connect()
database.execute_sql('PRAGMA foreign_keys = ON;')

class BaseModel(Model):
    class Meta:
        database = database

class Donors(BaseModel):
    """
        This class defines Person, which maintains details of someone
        for whom we want to research career to date.

        *** I am implemented with a numeric PK that is generated by the system ***
    """
    first_name = CharField(max_length = 30)
    last_name = CharField(max_length = 30)

    class Meta:
        indexes = (
            (('first_name', 'last_name'), True),  # This should generated a unique constraint of those two columns
        )

    def __repr__(self):
        return f"{first_name} {last_name}"

class Donations(BaseModel):

    """
        This class defines Donation, which maintains list of donations by donor

        *** I am implemented with a numeric PK that is generated by the system ***
    """

    amount = FloatField()
    donation_date = DateField()
    donor = ForeignKeyField(Donors, related_name='by_donor', null = False)   
