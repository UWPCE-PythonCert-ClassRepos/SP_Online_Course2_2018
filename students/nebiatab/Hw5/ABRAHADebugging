> /Users/nebiatabraha1/Desktop/Python_Certificate/recursive.py(2)<module>()
-> import sys
(Pdb) n
> /Users/nebiatabraha1/Desktop/Python_Certificate/recursive.py(4)<module>()
-> def my_fun(n):
(Pdb) n
> /Users/nebiatabraha1/Desktop/Python_Certificate/recursive.py(10)<module>()
-> if __name__ == '__main__':
(Pdb) n
> /Users/nebiatabraha1/Desktop/Python_Certificate/recursive.py(11)<module>()
-> n = int(sys.argv[1])
(Pdb) pp n
*** NameError: name 'n' is not defined
(Pdb) n
> /Users/nebiatabraha1/Desktop/Python_Certificate/recursive.py(12)<module>()
-> print(my_fun(n))
(Pdb) pp n
15
(Pdb) s
--Call--
> /Users/nebiatabraha1/Desktop/Python_Certificate/recursive.py(4)my_fun()
-> def my_fun(n):
(Pdb) n
> /Users/nebiatabraha1/Desktop/Python_Certificate/recursive.py(5)my_fun()
-> if n == 2:
(Pdb) n
> /Users/nebiatabraha1/Desktop/Python_Certificate/recursive.py(8)my_fun()
-> return my_fun(n/2)
(Pdb) s
--Call--
> /Users/nebiatabraha1/Desktop/Python_Certificate/recursive.py(4)my_fun()
-> def my_fun(n):
(Pdb) pp n
7.5
(Pdb) n
> /Users/nebiatabraha1/Desktop/Python_Certificate/recursive.py(5)my_fun()
-> if n == 2:
(Pdb) n
> /Users/nebiatabraha1/Desktop/Python_Certificate/recursive.py(8)my_fun()
-> return my_fun(n/2)
(Pdb) s
--Call--
> /Users/nebiatabraha1/Desktop/Python_Certificate/recursive.py(4)my_fun()
-> def my_fun(n):
(Pdb) pp n
3.75
(Pdb) n
> /Users/nebiatabraha1/Desktop/Python_Certificate/recursive.py(5)my_fun()
-> if n == 2:
(Pdb) n
> /Users/nebiatabraha1/Desktop/Python_Certificate/recursive.py(8)my_fun()
-> return my_fun(n/2)
(Pdb) s
--Call--
> /Users/nebiatabraha1/Desktop/Python_Certificate/recursive.py(4)my_fun()
-> def my_fun(n):
(Pdb) n
> /Users/nebiatabraha1/Desktop/Python_Certificate/recursive.py(5)my_fun()
-> if n == 2:
(Pdb) pp n
1.875
(Pdb) 

The value of 'n' is now less than 2, which is where the end condition should come in to play. However, there is no end condition so this is where that officially becomes a problem.  